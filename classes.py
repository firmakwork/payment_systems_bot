import bs4import pickledef save_object(data, file_name="tasks.pkl"):    with open(file_name, "wb+") as fp:        pickle.dump(data, fp)def load_object(file_name="tasks.pkl"):    with open(file_name, "rb+") as fp:        data = pickle.load(fp)    return dataclass User:    username: str    fio: str    subscription: int    flag: int    message_id: int###Класс нереляционной бдclass nsql_database:    def __init__(self) -> None:        self.data = {}    # Получение значения по ключу    def get_elem(self, key: int | str) -> User | bool:        if key in self.data:            return self.data[key]        else:            return Falseclass Users(nsql_database):    def __init__(self):        super().__init__()    def __contains__(self, other: int) -> bool:        if other in self.data:            return True        else:            return False    def __add_user(self, id: int):        self.data[id] = User()        return self    def __add__(self, id: int):        return self.__add_user(id)    def __iadd__(self, id: int):        return self.__add_user(id)    def create_pay(self, id: int, subscription_period: int):        with open("./templates/pay.html", "r", encoding='utf-8') as inf:            txt = inf.read()        soup = bs4.BeautifulSoup(txt, 'html.parser')        page = str(soup).split(' ')        ind = page.index(f'value="ID_122344"/>\n<input')        page[ind] = f'value="ID_{id}"/>\n<input'        html = ""        print(subscription_period)        if subscription_period == 3:            ind = page.index(f'value="99999"/>\n<input')            page[ind] = f'value="400"/>\n<input'            for i in page:                html += i + ' '            return html        elif subscription_period == 10:            ind = page.index(f'value="99999"/>\n<input')            page[ind] = f'value="900"/>\n<input'            for i in page:                html += i + ' '            return html        elif subscription_period == 30:            ind = page.index(f'value="99999"/>\n<input')            page[ind] = f'value="1800"/>\n<input'            for i in page:                html += i + ' '            return html